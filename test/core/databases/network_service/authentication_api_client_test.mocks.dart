// Mocks generated by Mockito 5.4.4 from annotations
// in todak_shop/test/core/databases/network_service/authentication_api_client_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dio/dio.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:todak_shop/core/core.dart' as _i2;
import 'package:todak_shop/core/databases/services/dio_config.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNetworkStorageInterface_0<T1> extends _i1.SmartFake
    implements _i2.NetworkStorageInterface<T1> {
  _FakeNetworkStorageInterface_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDio_1 extends _i1.SmartFake implements _i3.Dio {
  _FakeDio_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOptions_2 extends _i1.SmartFake implements _i3.Options {
  _FakeOptions_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_3<T> extends _i1.SmartFake implements _i3.Response<T> {
  _FakeResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NetworkStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkStorageService<T> extends _i1.Mock
    implements _i2.NetworkStorageService<T> {
  MockNetworkStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.NetworkStorageInterface<T> get networkStorage => (super.noSuchMethod(
        Invocation.getter(#networkStorage),
        returnValue: _FakeNetworkStorageInterface_0<T>(
          this,
          Invocation.getter(#networkStorage),
        ),
      ) as _i2.NetworkStorageInterface<T>);
}

/// A class which mocks [DioService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioService extends _i1.Mock implements _i4.DioService {
  MockDioService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_1(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i3.Dio);

  @override
  set dio(_i3.Dio? _dio) => super.noSuchMethod(
        Invocation.setter(
          #dio,
          _dio,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Options get requestOptions => (super.noSuchMethod(
        Invocation.getter(#requestOptions),
        returnValue: _FakeOptions_2(
          this,
          Invocation.getter(#requestOptions),
        ),
      ) as _i3.Options);

  @override
  _i5.Future<_i3.Response<dynamic>> get(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
          },
        ),
        returnValue:
            _i5.Future<_i3.Response<dynamic>>.value(_FakeResponse_3<dynamic>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response<dynamic>>);

  @override
  _i5.Future<_i3.Response<dynamic>> post(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
          },
        ),
        returnValue:
            _i5.Future<_i3.Response<dynamic>>.value(_FakeResponse_3<dynamic>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response<dynamic>>);
}
